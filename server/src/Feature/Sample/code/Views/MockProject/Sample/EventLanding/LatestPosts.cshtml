@using Glass.Mapper.Sc.Web.Mvc
@using MockProject.Foundation.SitecoreExtensions.Extensions
@using MockProject.Foundation.SitecoreExtensions.Helpers
@using System.Linq
@model MockProject.Feature.Sample.Models.TemplateModels.ListEventModel

<div class="row">
    <div class="col-lg-8">
        @foreach (var item in Model.Events.Take(1))
        {
            <div class="post highlight-post">
                <article class="post-overlap-title">
                    <div class="img-with-box">
                        <a class="img bg-overlay img-to-bg" href="#" title="Image" style="background-image: url(&quot;images/post-light.png&quot;);">@Html.Glass().RenderImage(item, x => x.Image, isEditable: true)</a>
                        <div class="round-box" style="overflow-wrap: break-word;">
                            <a class="title-carrot" href="#">@Html.Glass().Editable(item.Category, x => x.Name)</a><a class="round-box-text mb-0" href="#">@Html.Glass().Editable(item, x => x.TitleEntity)</a>
                        </div>
                    </div>
                    <ul class="social-list-items">
                        <li class="item"><i class="icon-clock"></i>@Html.Glass().Editable(item, x => x.Likes)</li>
                        <li class="item"><i class="icon-location"></i>@Html.Glass().Editable(item, x => x.Views)</li>
                    </ul>
                </article>
            </div>
        }
    </div>
    <div class="col-lg-4">
        <div class="row">
            @foreach (var item in Model.Events.Skip(1))
            {
                <div class="col-md col-lg-12">
                    <div class="post">
                        <article class="post-overlap-title">
                            <div class="img-with-box">
                                <a class="img bg-overlay img-to-bg" href="#" title="Image" style="background-image: url(&quot;images/post-light.png&quot;);">@Html.Glass().RenderImage(item, x => x.Image, isEditable: true)</a>
                                <div class="round-box" style="overflow-wrap: break-word;">
                                    <a class="title-carrot" href="#">@Html.Glass().Editable(item.Category, x => x.Name)</a><a class="round-box-text mb-0" href="#">@Html.Glass().Editable(item, x => x.TitleEntity)</a>
                                </div>
                            </div>
                            <ul class="social-list-items">
                                <li class="item"><i class="icon-clock"></i>@Html.Glass().Editable(item, x => x.Likes)</li>
                                <li class="item"><i class="icon-location"></i>@Html.Glass().Editable(item, x => x.Views)</li>
                            </ul>
                        </article>
                    </div>
                </div>
            }
        </div>
    </div>
</div>